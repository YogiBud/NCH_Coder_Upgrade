## Make output from Monday beginner session
```{r}
dir <- "input/scRNA"
ox1x_raw <-
  Read10X("input/scRNA/GSM6925133_OX1X")

ox1x_sobj <-
  CreateSeuratObject(counts = ox1x_raw,
                     min.cells = 3,
                     min.features = 200)

ox1x_sobj$orig.ident <- "GSM6925133_OX1X"

qsave(ox1x_sobj, "output/rdata_premade/OX1X_sobj.qs")

rm(ox1x_raw, ox1x_sobj)
```

## Make output from Tuesday beginner session
```{r}

```

## Make output from Wednesday beginner session
```{r}
samples <-
  list.dirs(paste0(dir),
            recursive = FALSE) %>%
  basename() %>%
  grep("GSM6925133_OX1X", # We already have an object for this sample
       .,
       invert = TRUE,
       value = TRUE)

objs <- list()
for (this_sample in samples){
  raw_counts <-
    Read10X(paste0(dir, "/", this_sample))
  sobj <-
    CreateSeuratObject(counts = raw_counts,
                       min.cells = 3,
                       min.features = 200)

  sobj$orig.ident <- this_sample

  #!!!!!!!!!!!!!!!!!!!!!!!! Need to add in SingleR annotation here

  objs[[this_sample]] <- sobj
}

qsave(objs, "output/rdata_premade/scRNA_objs_list.qs")

rm(samples, raw_counts, sobj, objs)
```

```{r}
merged <-
  merge(objs[[1]],
        objs[2:length(objs)],
        add.cell.ids = names(objs))

VlnPlot(merged,
        features = c("nCount_RNA",
                     "nFeature_RNA"),
        group.by = "orig.ident")
ggsave("~/projects/scrgot/scrgot_2025/mouse_brain/rna/prelim_vlnplot.jpeg",
       width = 8,
       height = 4)

table(merged$orig.ident)

meta <-
  read.table("~/projects/scrgot/scrgot_2025/mouse_brain/rna/raw/GSE129788_Supplementary_meta_data_Cell_Types_Etc.txt",
             sep = "\t",
             header = T)
meta <-
  meta[-1,]
```


```{r}
# make QC plots
for (sample in names(objs)){
  obj <-
    objs[[sample]]
  obj[["percent.mt"]] <-
    PercentageFeatureSet(obj,
                         pattern = "^mt-")
  VlnPlot(obj,
          features = c("nFeature_RNA",
                       "nCount_RNA",
                       "percent.mt"),
          group.by = "orig.ident",
          ncol = 3) &
    xlab(NULL) &
    theme(axis.text.x = element_text(angle = 0,
                                     hjust = 0.5))
  ggsave(filename = paste0(dir, "figures/scrna_", sample, "_qc_plots.jpeg"),
         width = 7,
         height = 4)
  objs[[sample]] <- obj
}

# subset data based on QC metrics
for (sample in names(objs)){
  obj <-
    objs[[sample]]
  obj <-
    subset(obj,
           subset = nFeature_RNA > 500 &
                    nCount_RNA < 50000 &
                    percent.mt < 20)
  saveRDS(obj,
          paste0(dir,"scrna/rdata/scrna_", sample, "_postqc.rds"))
  objs[[sample]] <- data
}

# calculate number of cells per sample
postqc <- data.frame()
for (sample in names(objs)){
  data <-
    objs[[sample]]
  cells <-
    nrow(data@meta.data)
  add <-
    c(sample, cells)
  postqc <-
    rbind(postqc, add)
}
colnames(postqc) <-
  c("sample", "nCells")
postqc$nCells <-
  as.numeric(postqc$nCells)
ggplot(postqc,
       aes(y = sample,
           x = nCells)) +
  geom_col() +
  ggtitle("Post-QC") +
  theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = paste0(fig, "flex_postqc_ncells.jpeg"),
       width = 6,
       height = 6)
```



```{r}
merged <-
  merge(objs[[1]],
        objs[2:length(objs)],
        add.cell.ids = names(objs))


```


